resource "azurerm_network_interface" "admin" {
  name                = "admin-nic"
  location            = data.terraform_remote_state.resource_group.outputs.default_resource_group_location
  resource_group_name = data.terraform_remote_state.resource_group.outputs.default_resource_group_name

  ip_configuration {
    name                          = "testconfiguration_admin"
    subnet_id                     = azurerm_subnet.master_subnet.id  # Using master_subnet currently 
    private_ip_address_allocation = "Dynamic"
  }
}


resource "azurerm_virtual_machine" "admin_node" {
  name                  = "admin-node"
  location              = data.terraform_remote_state.resource_group.outputs.default_resource_group_location
  resource_group_name   = data.terraform_remote_state.resource_group.outputs.default_resource_group_name
  network_interface_ids = [azurerm_network_interface.admin.id]
  vm_size               = var.machine_size
  delete_os_disk_on_termination = true

  storage_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts"
    version   = "latest"
  }

  storage_os_disk {
    name              = "admin-node-disk"
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
    disk_size_gb      = var.storage_size_gb
  }

  os_profile {
    computer_name  = "admin-node"
    admin_username = "adminuser"
    admin_password = "YourPassword1234!" # Will use secrets
  }

  os_profile_linux_config {
    disable_password_authentication = false
  }

  provisioner "local-exec" {
    command = "${path.module}/scripts/admin_setup.sh"  # Modify script name as per your requirement
  }
}

